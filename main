import random

"""
Rate of creation per HOUR
Example: A person created 10 shirts in one hour, a machine created 20 shirts
Therefore the machine is 100% faster
"""


def materialSimulation(iterations, materialCost, numProductsHum, numProductsMach, workingHoursHum, workingHoursMach):#, personLaborRate, machineLaborRate):
    #humanMistakes = [1,2,3]
    
    humanCost = 0
    machCost = 0
    #humanArticlesMade = 0
    for i in range(iterations):
        machineMistakes = random.random()
        #print(machineMistakes)
        machineMistakesRate = machineMistakes/200  #equivalent to less than half a percent
        #print(machineMistakesRate)
        personMistakes = random.random()
        #print(personMistakes)
        personMistakesRate = personMistakes/25 #equivalent to the highest possible value being 4
        

        productMistakeHum = numProductsHum * personMistakesRate * workingHoursHum
        humanCost += productMistakeHum 
        #numProductsHum is determined by number of pieces a human makes in 1 year
        productMistakeMach = numProductsMach * machineMistakesRate * workingHoursMach
        machCost += productMistakeMach 
        #numProductsMach is determined by number of pieces a machine makes in 1 year
        
        #humanProduction = (personLaborRate-personMistakes)
        #humanArticlesMade += humanProduction #concatenation and adding how many
                                             #articles made

        #comparing rate of mistakes made NOT products made in x hrs
        
    #humanProduction = personLaborRate*iterations
    #machineProduction = machineLaborRate*iterations
    
    mistakeCostHum = (humanCost*materialCost)/iterations
    
    mistakeCostMach = (machCost*materialCost)/iterations
    
    return mistakeCostHum, mistakeCostMach

    #difference = machineProduction - humanProduction
    
    
    
def maintenance(iterations, mFreq, mCost, rCost):
    maintenanceYear = mFreq * 12
    rFreq = 0
    quality = int(input("What is the quality of the machine(1-2-3)? | (3 being very good) "))
    for i in range(iterations):
        if(quality == 1):
            rFreq += (random.random()/12.5) #percentage is 8%
        elif(quality == 2):
            rFreq += (random.random()/25) #percentage is 4%
        elif(quality == 3):
            rFreq += (random.random()/50) #percentage is 1.7%
    rFreq = rFreq/iterations   
    
    repairYear = rFreq * 12
    
#    print(rFreq, repairYear)
    
    maintenanceCost = maintenanceYear * mCost
    repairCost = repairYear * rCost
    
    #print(repairCost)
    costs = [maintenanceCost, repairCost]
    return costs
    

def main():
    
    #potential machines to lease
    #industrial dishwasher opposed to manually washing dishes
    #t-shirt printer opposed to manually printing t-shirts
    #wood-splitter opposed to manually splitting wood

    iterations = 1000000 #ten thousand to start
    #equipment = print(input("What is the cost of the machine?"))

    machineWeeks = 0
    print("The purpose of this program is to help you decide whether it is more valuable "
          "to you to higher an employee (paid at a specific wage) or to lease a machine "
          "to do the same job. This program accounts for human error, working speed and "
          "maintenance costs.\n")
    name = input("What machine are you thinking of leasing? ")
    numProductsMach = eval(input("How many units an hour does the "+name+" operate on? "))
    numHoursMach = eval(input("How many hours a week is the "+ name+" operating? "))
    numWeeksMach = str(input("Does the "+name+" operate year-round(52 weeks)? Answer 'yes' or 'no'. "))
    if numWeeksMach == "yes":
        machineWeeks += 52
    elif numWeeksMach == "no":
        machineWeeks += int(input("How many weeks per year does the machine operate? "))
        
    numProductsHum = eval(input("How many units an hour does your employee work on? "))
    numHoursHum = eval(input("How many hours a week does your employee work? "))
    numWeeksHum = eval(input("How many weeks per year does your employee work? "))
    laborCost = eval(input("How much (per hour) do you pay the employee? "))
    rawMaterialCost = eval(input("Cost of raw materials per unit of product? "))

    
    

    hoursOfUseHum = numHoursHum * numWeeksHum
    
    laborCostYear = laborCost * hoursOfUseHum
    #print(laborCostYear)
    #print(hoursOfUseHum)
    hoursOfUseMach = numHoursMach * machineWeeks
    #print(hoursOfUseMach)
    
    materialCost = materialSimulation(iterations, rawMaterialCost, numProductsHum, numProductsMach, hoursOfUseHum, hoursOfUseMach)
    print("Cost due to human mistake: $" + str(round(materialCost[0], 2)))
    print("Cost due to machine mistake: $" + str(round(materialCost[1], 2)))
    print("Material Savings: $"+str(round(materialCost[0]-materialCost[1], 2)))
    
    materialSavings = round(materialCost[0]-materialCost[1], 2)
    
    
     #asking machine repair questions here: 
    maintenanceFreq = eval(input("How often does the "+name+" have to be inspected (per month)? "))
    #repairFreq = eval(input("How many repairs per month (on average)?"))
    maintenanceCost = eval(input("How much does an inspection cost? "))
    repairCost = eval(input("How much does a single repair cost (on average)? "))
    
    
    
    costs = maintenance(iterations, maintenanceFreq, maintenanceCost, repairCost)
    mCosts , rCosts = costs[0] , costs[1]
    print("Maintenance Costs per year: $" + str(round(mCosts, 2)) ,"\nCalculated repair costs per year: $"+ str(round(rCosts, 2)))


    productCost = eval(input("How much do you sell your product for? (A single unit) "))
    totalPCost = productCost - rawMaterialCost
    numberSold = (numProductsMach-numProductsHum)*totalPCost
    annualSavings = ((materialSavings-mCosts-rCosts)+laborCostYear)+numberSold
    print("Annual Savings from leasing the "+name+": $"+str(round(annualSavings, 2)))
    
    leaseTerm = eval(input("How long is the lease for in months? "))
    calculatedSavings = annualSavings * (leaseTerm/12)
    print("Savings from leasing the "+name+" opposed to paying an employee: $" + str(round(calculatedSavings, 2)))
    print("It isn't cost efficient to pay for a lease more than: $" + str(round(calculatedSavings, 2)))

    

##    Maintenance Costs:
    
    
##    How much does one maintenance checkup cost?*Average number of times there
##    is a checkup needed 
##    
##
##    Raw Material Savings:
##    How much does material cost per piece?
##    How much does machine produce per hour per thing of material?
##    How much does a person produce per hour per thing of material?
##    Subtract and calculate difference
##
##    Labor savings:
##    Cost per hour for person TIMES hour spent 
##    versus
##    How many times a year do you repair machine, what is cost?
    #Can do standard devation to get average

    

main()




    
